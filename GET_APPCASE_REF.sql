/******* Return the APPLICATIONREFERENCE Number generated by Curam when the Application form is "submit"ed, given the Case_Worker ID and the interval in minutes,
         given by [SYSDATE - LENGTH_OF_INTERVAL] in which to search the INTAKEAPPLICATION table. 
         If no INTAKEAPPLICATION Number is found (or an error occurs), 'NULL' is returned **************************************/
         
CREATE OR REPLACE FUNCTION GET_APPCASE_REF (CASE_WORKER IN string, LENGTH_OF_INTERVAL IN NUMBER) RETURN NUMBER
AS
BEGIN /* FUNCTION */
DECLARE
  APPCASE_REF  VARCHAR2(20);
  BEGIN /* EXECUTION */
--    dbms_output.put_line('=====================================================================================================================================================================================================================================');
      select APPLICATIONREFERENCE INTO APPCASE_REF 
      from APPLICATIONCASE AC, INTAKEAPPLICATION IA
      where IA.REFERENCE = AC.APPLICATIONREFERENCE AND IA.ENTEREDBYUSER = CASE_WORKER
          AND AC.SUBMITTEDDATETIME >= (SYSDATE - LENGTH_OF_INTERVAL/(60.0 * 24.0));
--    dbms_output.put_line('===================================REFERENCE FOUND = ' || GET_APPCASE_REF || ' =================================================================');
--    dbms_output.put_line('=====================================================================================================================================================================================================================================');
      RETURN APPCASE_REF;
      EXCEPTION
          WHEN no_data_found THEN dbms_output.put_line('No Data Found');
            RETURN NULL;
          WHEN OTHERS THEN dbms_output.put_line('Fatal Error Encountered, with SQLERRM='||SQLERRM);
            RETURN NULL;
  END; /* EXECUTION */
END; /* FUNCTION */
/

SET SERVEROUTPUT ON;
exec dbms_output.enable(null);
	
/* To execute the GET_INTAKE_REF function, use (or alter) one of these two methods (remember to execute "SET SERVEROUTPUT ON;" before running it */
declare  v_ret varchar2(100);
BEGIN
  v_ret := GET_APPCASE_REF ('MECXIK@gmail.com',6706.0);
  dbms_output.put_line(TO_CHAR(v_ret));
END;
/

select GET_APPCASE_REF ('MECXIK@gmail.com', 7700.4) from dual;

/* Use this statement to first find a caseworker ID to test with and a time interval from which to search */
select AC.APPLICATIONCASEID, AC.APPLICATIONCASEADMINID, AC.CREATEDBY, TO_CHAR(IA.CREATEDON, 'yyyy/mm/dd hh24:mi:ss') as createdate, TO_CHAR(AC.SUBMITTEDDATETIME, 'yyyy/mm/dd hh24:mi:ss') as subdate, IA.REFERENCE, 
          IA.ENTEREDBYUSER, AC.APPLICATIONREFERENCE, AC.STATUS, AC.METHODOFAPPLICATION, AC.INTERPRETERIND, AC.SPECIALASSISTANCEIND, AC.SPECIALASSISTANCEREQUIREMENT, AC.INTERPRETERLANGUAGE, 
          TO_CHAR(AC.APPLICATIONDATE, 'yyyy/mm/dd hh24:mi:ss') as appdate, AC.PREFERREDCONTACT, AC.VERSIONNO, AC.REFERRALSOURCE, AC.REFERRALSOURCEDESCRIPTION, AC.REFERREDBY, AC.REFERRALREASON, AC.COMMENTS
  from APPLICATIONCASE AC, INTAKEAPPLICATION IA
  where IA.REFERENCE = AC.APPLICATIONREFERENCE AND AC.SUBMITTEDDATETIME is not null order by AC.SUBMITTEDDATETIME desc;
  
/* Use this to compute the number of minutes from a previous date/time to NOW */
select 24*60*(SYSDATE - TO_DATE('2016/12/22 00:00:00', 'yyyy/mm/dd hh24:mi:ss')) from dual;
