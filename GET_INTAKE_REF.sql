/******* Return the INTAKEAPPLICATION Reference Number generated by Curam when the Application form is started, given the Case_Worker ID and the interval in minutes,
         given by [SYSDATE - LENGTH_OF_INTERVAL] in which to search the INTAKEAPPLICATION table. 
         If no INTAKEAPPLICATION Reference Number is found (or an error occurs), 'NULL' is returned **************************************/
         
CREATE OR REPLACE FUNCTION GET_INTAKE_REF (CASE_WORKER IN string, LENGTH_OF_INTERVAL IN NUMBER) RETURN NUMBER
AS
BEGIN /* FUNCTION */
DECLARE
  INTAKE_REF  VARCHAR2(20);
  BEGIN /* EXECUTION */
--    dbms_output.put_line('=====================================================================================================================================================================================================================================');
      select REFERENCE INTO INTAKE_REF from INTAKEAPPLICATION 
        where ENTEREDBYUSER = CASE_WORKER
          AND CREATEDON >= (SYSDATE - LENGTH_OF_INTERVAL/(60.0 * 24.0)); /* 1440 minutes = 1 day */
--    dbms_output.put_line('===================================REFERENCE FOUND = ' || INTAKE_REF || ' =================================================================');
--    dbms_output.put_line('=====================================================================================================================================================================================================================================');
      RETURN INTAKE_REF;
      EXCEPTION
          WHEN no_data_found THEN dbms_output.put_line('No Data Found');
            RETURN NULL;
          WHEN OTHERS THEN dbms_output.put_line('Fatal Error Encountered, with SQLERRM='||SQLERRM);
            RETURN NULL;
  END; /* EXECUTION */
END; /* FUNCTION */
/

SET SERVEROUTPUT ON;
exec dbms_output.enable(null);
	
/* To execute the GET_INTAKE_REF function, use (or alter) one of these two methods (remember to execute "SET SERVEROUTPUT ON;" before running it */
declare  v_ret varchar2(100);
BEGIN
  v_ret := GET_INTAKE_REF ('KBSOLI@gmail.com',7020.1);
  dbms_output.put_line(TO_CHAR(v_ret));
END;
/

select GET_INTAKE_REF ('KBSOLI@gmail.com',7020.1) from dual;

/* Use this statement to first find a caseworker ID to test with and a time interval from which to search */
select INTAKEAPPLICATIONID, STATUS, TO_CHAR(SUBMITTEDDATETIME, 'yyyy/mm/dd hh24:mi:ss') as subdate, LOCALECODE, FILINGDATE, REFERENCE, APPLICATIONMETHOD, ENTEREDBYUSER, INTAKEAPPLICATIONTYPEID, ROOTENTITYID, SCHEMANAME, ATTACHMENTID, 
        CREATEDBY, TO_CHAR(CREATEDON, 'yyyy/mm/dd hh24:mi:ss') as createdate, LASTUPDATEDBY, TO_CHAR(LASTUPDATEDON, 'yyyy/mm/dd hh24:mi:ss') as lastupdate, VERSIONNO, 
        TO_CHAR(LASTWRITTEN, 'yyyy/mm/dd hh24:mi:ss') as lastwritten, DATASTOREMAPPINGSID, HASINTAKECHECKEDEX 
  from INTAKEAPPLICATION where CREATEDON is not null order by CREATEDON desc;
  
/* Use this to compute the number of minutes from a previous date/time to NOW */
select 24*60*(SYSDATE - TO_DATE('2016/12/21 13:48:30', 'yyyy/mm/dd hh24:mi:ss')) from dual;
