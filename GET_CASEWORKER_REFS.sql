/******* (Original script was authored by Pranav Kumar) obtain reference numbers, timing information and descriptions generated by Curam, given the Case_Worker ID and the interval in minutes,
         given by [SYSDATE - LENGTH_OF_INTERVAL] in which to search the CASEHEADER, MOTIVATION, MOTIVATIONINTAKEAPPLINK, INTAKEAPPLICATION, INTAKEPROGRAMAPPLICATION, APPLICATIONCASE, CASERELATIONSHIP and PRODUCTDELIVERY tables. 
         Curam data is placed into an array of records: caseWorker_Refs_Table.                         **************************************/

CREATE OR REPLACE PACKAGE caseWorker_Refs_Pkg AS  
  TYPE caseWorker_Refs_Record IS RECORD (
     app_ref                caseheader.casereference%TYPE,
     ic_ref                 caseheader.casereference%TYPE,
     pdc_ref                caseheader.casereference%TYPE,
     ia_createdon           VARCHAR2(20),
     ipa_createdon          VARCHAR2(20),
     ac_submitteddatetime   VARCHAR2(20),
     pdc_createdon          VARCHAR2(20),
     pdc_lastwritten        VARCHAR2(20),
     motivation_username    motivation.username%TYPE,
     ACsubmit_to_PDinit     number,
     IAcreate_to_PDinit     number,
     IAcreate_to_PDend      number,
     IPAcreate_to_PDend     number,
     ProductType_Desc       codetableitem.description%TYPE,
     PDC_Status_Desc        codetableitem.description%TYPE
                                      );
                                      
  TYPE caseWorker_Refs_Table IS TABLE OF caseWorker_Refs_Record INDEX BY PLS_INTEGER;
  
  PROCEDURE GET_CASEWORKER_REFS (CASE_WORKER IN string, LENGTH_OF_INTERVAL IN NUMBER, caseWorker_References OUT caseWorker_Refs_Table);
END caseWorker_Refs_Pkg;
/
CREATE OR REPLACE PACKAGE BODY caseWorker_Refs_Pkg AS
  PROCEDURE GET_CASEWORKER_REFS (CASE_WORKER IN string, LENGTH_OF_INTERVAL IN NUMBER, caseWorker_References OUT caseWorker_Refs_Table)
IS
BEGIN /* PROCEDURE */
  BEGIN /* EXECUTION */
--    dbms_output.put_line('=====================================================================================================================================================================================================================================');
--    dbms_output.put_line('CASE_WORKER='||CASE_WORKER||'     LENGTH_OF_INTERVAL='||TO_CHAR(LENGTH_OF_INTERVAL));
    select 
      appcase.casereference, 
      ch.casereference, 
      pdc.casereference, 
      TO_CHAR(ia.createdon, 'yyyy/mm/dd hh24:mi:ss'), 
      TO_CHAR(ipa.createdon, 'yyyy/mm/dd hh24:mi:ss'), 
      TO_CHAR(ac.submitteddatetime, 'yyyy/mm/dd hh24:mi:ss'), 
      TO_CHAR(pdc.createdon, 'yyyy/mm/dd hh24:mi:ss'),
      TO_CHAR(pdc.lastwritten, 'yyyy/mm/dd hh24:mi:ss'), 
      m.username,
      ROUND((pdc.createdon - ac.submitteddatetime)*24*60*60, 2),
      ROUND((pdc.createdon - ia.createdon)*24*60*60, 2),
      ROUND((pdc.lastwritten - ia.createdon)*24*60*60, 2),
      ROUND((pdc.lastwritten - ipa.createdon)*24*60*60, 2),
      (select description from codetableitem where code = pd.producttype and tablename = 'ProductType'),
      (select description from codetableitem where code = pdc.STATUSCODE and tablename = 'CaseStatus')
    BULK COLLECT into caseWorker_References    
    from motivation m, 
      motivationintakeapplink mia, 
      intakeapplication ia, 
      applicationcase ac, 
      caseheader appcase, 
      caseheader ch, 
      caseheader pdc, 
      caserelationship crp, 
      productdelivery pd, 
      intakeprogramapplication ipa  
    where m.motivationid = mia.motiveid
      and mia.intakeappid = ia.intakeapplicationid
      and ia.reference = ac.applicationreference
      and ipa.intakeapplicationid = ia.intakeapplicationid
      and ac.applicationcaseid = appcase.caseid
      and crp.caseid = appcase.caseid
      and ch.caseid = crp.relatedcaseid and ch.casetypecode = 'CT5'
      and pdc.integratedcaseid = ch.caseid
      and pdc.caseid = pd.caseid
      and pdc.createdon >= (SYSDATE - LENGTH_OF_INTERVAL/(60.0 * 24.0)) /* 1440 minutes = 1 day */
      and m.USERNAME = CASE_WORKER
    order by pdc.casereference;
--    dbms_output.put_line('=====================================================================================================================================================================================================================================');
  EXCEPTION
          WHEN no_data_found THEN dbms_output.put_line('No Data Found');
          WHEN OTHERS THEN dbms_output.put_line('Fatal Error Encountered, with SQLERRM='||SQLERRM);
  END; /* EXECUTION */
END GET_CASEWORKER_REFS; /* PROCEDURE */
END caseWorker_Refs_Pkg;
/

/* To execute the GET_CASEWORKER_REFS function, use (or alter) this method (remember to execute "SET SERVEROUTPUT ON;" before running it */
SET SERVEROUTPUT ON;	
DECLARE
  caseWorker_Refs_Array caseWorker_Refs_Pkg.caseWorker_Refs_Table;
BEGIN
--  dbms_output.put_line('Start GET_CASEWORKER_REFS');
  caseWorker_Refs_Pkg.GET_CASEWORKER_REFS ('WMINJA@gmail.com',6400.1, caseWorker_Refs_Array); /* 1440 minutes = 1 day */
--  dbms_output.put_line('End GET_CASEWORKER_REFS');
  dbms_output.put_line('--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------');
  dbms_output.put_line('app_ref|ic_ref |pdc_ref|	  ia_createdon	 |	  ipa_createdon  |ac_submitteddatetime|	  pdc_createdon 	|	 pdc_lastwritten 	|motivation_username|ACsubmit_to_PDinit|' ||
                       'IAcreate_to_PDinit	|	IAcreate_to_PDend	|	IPAcreate_to_PDend	|	              ProductType_Desc	            |	   PDC_Status_Desc');
  dbms_output.put_line('--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------');
  For i IN 1 .. caseWorker_Refs_Array.Count
  LOOP
    dbms_output.put_line(caseWorker_Refs_Array(i).app_ref	|| '|' || caseWorker_Refs_Array(i).ic_ref	||	'|'	||	caseWorker_Refs_Array(i).pdc_ref ||	'|' ||	
                          caseWorker_Refs_Array(i).ia_createdon	|| '|' || caseWorker_Refs_Array(i).ipa_createdon||	'|' ||	caseWorker_Refs_Array(i).ac_submitteddatetime		||	' |' ||	
                          caseWorker_Refs_Array(i).pdc_createdon	|| '|' || 	
                          caseWorker_Refs_Array(i).pdc_lastwritten	|| '|  ' || 	caseWorker_Refs_Array(i).motivation_username	|| ' |        ' || 	
                          LPAD(caseWorker_Refs_Array(i).ACsubmit_to_PDinit, 6)	|| '    |    ' || 	
                          LPAD(caseWorker_Refs_Array(i).IAcreate_to_PDinit, 6)	||	'          |     ' || LPAD(caseWorker_Refs_Array(i).IAcreate_to_PDend, 6)	||	'        |      ' ||	
                          LPAD(caseWorker_Refs_Array(i).IPAcreate_to_PDend, 6)	||	'         |        ' ||	
                          RPAD(caseWorker_Refs_Array(i).ProductType_Desc, 35)	|| '  |       ' || 	caseWorker_Refs_Array(i).PDC_Status_Desc);
  END LOOP;
dbms_output.put_line('--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------');
  END;
/


/* Use this statement to first find a caseworker ID to test with and a time interval from which to search */
select M.USERNAME, PDC.CASEREFERENCE, (select description from codetableitem where code = PDC.STATUSCODE and tablename = 'CaseStatus'), TO_CHAR(PDC.CREATEDON, 'yyyy/mm/dd hh24:mi:ss'), TO_CHAR(PDC.LASTWRITTEN, 'yyyy/mm/dd hh24:mi:ss')
  from  MOTIVATION M, 
        CASEHEADER PDC, 
        motivationintakeapplink mia, 
        intakeapplication ia, 
        applicationcase ac, 
        caseheader appcase, 
        caseheader ch, 
        caserelationship crp, 
        productdelivery pd, 
        intakeprogramapplication ipa  
  where M.motivationid = mia.motiveid
      and mia.intakeappid = ia.intakeapplicationid
      and ia.reference = ac.applicationreference
      and ipa.intakeapplicationid = ia.intakeapplicationid
      and ac.applicationcaseid = appcase.caseid
      and crp.caseid = appcase.caseid
      and ch.caseid = crp.relatedcaseid and ch.casetypecode = 'CT5'
      and PDC.integratedcaseid = ch.caseid
      and PDC.caseid = pd.caseid
      and PDC.CREATEDON >= (SYSDATE - 2000.0/(60.0 * 24.0)) /* 1440 minutes = 1 day */ order by PDC.CREATEDON DESC;

/* Use this to compute the number of minutes from a previous date/time to NOW */
select 24*60*(SYSDATE - TO_DATE('2016/12/21 13:48:30', 'yyyy/mm/dd hh24:mi:ss')) from dual;
